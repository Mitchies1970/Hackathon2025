using Hackathon2025.DbRepo.Data;
using Hackathon2025.DTOs;
using Microsoft.EntityFrameworkCore;

namespace Hackathon2025.DbRepo
{
    public class Query(HackathonDbContext _dbContext)
    {
        HackathonDbContext dbContext = _dbContext;

        public List<Product> GetProducts(string sqlQuery)
        {
            //Adding this here for the hackathon out of interest to see what the queries generated by Chat AI are. 
            List<Product> productsToReturn = new List<Product>(1001) { new Product("AI SQL", sqlQuery) };

            int index = sqlQuery.IndexOf("where", StringComparison.OrdinalIgnoreCase);

            if (index == -1) { return new List<Product>(); }

            try
            {
                var products = dbContext.Database.SqlQueryRaw<Data.Models.ProductEntity>(sqlQuery);

                productsToReturn.AddRange(products.Select(s => new Product(s.ProductName, s.ProductDescription) { Id = s.Id }).ToList());
            }
            catch (Microsoft.Data.SqlClient.SqlException ex)
            {
                //added for this hackathon to see what queries are coming back from AI but are crashing. Just a Hack of course. 
                productsToReturn.Add(new Product("SqlException", ex.Message));
            }

            return productsToReturn;
        }
    }
}
